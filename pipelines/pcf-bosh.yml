---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: pcf-bosh-ci
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-bosh-ci
    branch: master
    private_key: {{pcf-bosh-ci_deploy_key}}

- name: cloud-config
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-bosh-ci
    branch: master
    private_key: {{pcf-bosh-ci_deploy_key}}
    paths: [cloud-config.yml]

- name: cf-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-deployment
    branch: master
    tag_filter: "0\\.0\\.0"

- name: cf-acceptance-tests
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-acceptance-tests
    branch: master

- name: p-ert-bosh-experiment
  type: git
  source:
    uri: https://github.com/pivotal-cf/p-ert-bosh-experiment
    branch: master

- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource

- name: terraforming-gcp
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-bosh-terraforming-gcp
    private_key: {{pcf-bosh-terraforming-gcp_deploy_key}}
    branch: master

- name: bosh-deployment
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-deployment
    branch: master

- name: terraform-state
  type: terraform
  source:
    storage:
      bucket: pcf-bosh-ci
      bucket_path: terraform-environments
      access_key_id: {{gcs_access_key_id}}
      secret_access_key: {{gcs_secret_access_key}}
      endpoint: storage.googleapis.com
  delete_on_failure: true

- name: bosh-state
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: bosh-state.json

- name: bosh-creds
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: bosh-creds.yml

- name: cf-creds
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: cf-creds.yml

- name: cf-cats-config
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: cf-cats-config.json

- name: cf-rats-config
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: cf-rats-config.json

- name: terraform-vars
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: terraform.tfvars.yml

- name: bosh-vars
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: bosh-vars.yml

- name: credhub-release
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: credhub-0.3.0.tgz

- name: closed-source-releases-zip
  type: gcs-resource
  source:
    bucket: pcf-bosh-ci
    json_key: {{google_json_key}}
    versioned_file: closed-source-releases.zip

jobs:
- name: terraform-up
  plan:
  - aggregate:
    - get: terraforming-gcp
      trigger: true
    - get: terraform-vars
      trigger: true
    - get: terraform
      trigger: true
  - put: terraform-state
    params:
      var_file: terraform-vars/terraform.tfvars.yml
      terraform_source: terraforming-gcp
      delete_on_failure: true
      env_name: ol-smokey

- name: deploy-director
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: bosh-deployment
      version:
        ref: 1b7d6d8c39afa6cac5f90351e586655ff1b963bf
    - get: bosh-state
    - get: bosh-creds
    - get: bosh-vars
    - get: credhub-release
    - get: terraform-state
      trigger: true
      passed: [terraform-up]
  - task: deploy-director
    file: pcf-bosh-ci/tasks/deploy-director.yml
    params:
      GOOGLE_JSON_KEY: {{google_json_key}}
    ensure:
      aggregate:
      - put: bosh-state
        params:
          file: new-bosh-state/*
      - put: bosh-creds
        params:
          file: new-bosh-creds/*

- name: upload-cloud-config
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: cloud-config
      trigger: true
    - get: bosh-creds
      trigger: true
      passed: [deploy-director]
  - task: upload-cloud-config
    file: pcf-bosh-ci/tasks/upload-cloud-config.yml

- name: upload-stemcell
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: cf-deployment
      trigger: true
    - get: bosh-creds
      trigger: true
      passed: [deploy-director]
  - task: stemcell-url-from-cf-deployment
    file: pcf-bosh-ci/tasks/stemcell-url-from-cf-deployment.yml
    params:
      NAME: bosh-google-kvm-ubuntu-trusty-go_agent
  - task: upload-stemcell
    file: pcf-bosh-ci/tasks/upload-stemcell.yml

- name: deploy-pcf
  serial: true
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: cf-deployment
      trigger: true
      passed: [upload-stemcell]
    - get: p-ert
      resource: p-ert-bosh-experiment
      trigger: true
    - get: cf-creds
    - get: closed-source-releases-zip
    - get: bosh-creds
      trigger: true
      passed: [upload-cloud-config, upload-stemcell]
  - task: extract-closed-source-releases
    file: pcf-bosh-ci/tasks/extract-closed-source-releases.yml
  - task: deploy-pcf
    file: pcf-bosh-ci/tasks/deploy-pcf.yml
    ensure:
        put: cf-creds
        params:
          file: new-cf-creds/*

- name: smoke-tests
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: bosh-creds
    - get: cf-creds
      trigger: true
      passed: [deploy-pcf]
  - task: run-smoke-tests
    file: pcf-bosh-ci/tasks/run-smoke-tests.yml

- name: run-cats
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: cf-acceptance-tests
    - get: cf-cats-config
    - get: cf-creds
      trigger: true
      passed: [deploy-pcf]
  - task: enable-diego-docker
    file: pcf-bosh-ci/tasks/enable-diego-docker.yml
  - task: run-cats
    file: pcf-bosh-ci/tasks/run-cats.yml

- name: run-rats
  plan:
  - aggregate:
    - get: pcf-bosh-ci
    - get: cf-acceptance-tests
    - get: cf-rats-config
    - get: cf-deployment
      passed: [deploy-pcf]
    - get: cf-creds
      trigger: true
      passed: [deploy-pcf]
  - task: fetch-routing-release
    file: pcf-bosh-ci/tasks/fetch-routing-release.yml
  - task: run-rats
    file: pcf-bosh-ci/tasks/run-rats.yml